import {
    Connection,
    clusterApiUrl,
    Keypair,
    PublicKey,
    Transaction,
    sendAndConfirmTransaction
  } from "@solana/web3.js";
  
  import {
    createUpdateMetadataAccountV2Instruction,
    DataV2
  } from "@metaplex-foundation/mpl-token-metadata";
  
  import dotenv from "dotenv";
  dotenv.config();
  
  const connection = new Connection(clusterApiUrl("devnet"));
  const TOKEN_METADATA_PROGRAM_ID = new PublicKey(
    "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s"
  );
  
  // üîê –í–∏—Ç—è–≥—É—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –∑ .env
  const privateKey = process.env["SEKRET_KEY"];
  if (!privateKey) throw new Error("SEKRET_KEY not found in .env");
  const user = Keypair.fromSecretKey(Uint8Array.from(JSON.parse(privateKey)));
  
  // üîë Mint —Ç–æ–∫–µ–Ω–∞, –º–µ—Ç–∞–¥–∞–Ω—ñ —è–∫–æ–≥–æ —Ö–æ—á–µ—à –æ–Ω–æ–≤–∏—Ç–∏
  const tokenMint = new PublicKey("6Yc3hMHqK6d7ANWY4xuDbBJLwEkCm18gzAJJtJokSKfM");
  
  // üìç –û–±—á–∏—Å–ª—é—î–º–æ PDA –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö
  const [metadataPDA] = PublicKey.findProgramAddressSync(
    [
      Buffer.from("metadata"),
      TOKEN_METADATA_PROGRAM_ID.toBuffer(),
      tokenMint.toBuffer(),
    ],
    TOKEN_METADATA_PROGRAM_ID
  );
  
  // ‚úçÔ∏è –ù–æ–≤—ñ –º–µ—Ç–∞–¥–∞–Ω—ñ
  const newMetadata: DataV2 = {
    name: "NewBootcampCoin üí•",
    symbol: "NEW",
    uri: "https://arweave.net/your-updated-json-link",
    sellerFeeBasisPoints: 0,
    creators: null,
    collection: null,
    uses: null,
  };
  
  // üßæ –§–æ—Ä–º—É—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é
  const updateIx = createUpdateMetadataAccountV2Instruction(
    {
      metadata: metadataPDA,
      updateAuthority: user.publicKey,
    },
    {
      updateMetadataAccountArgsV2: {
        data: newMetadata,
        updateAuthority: user.publicKey,
        primarySaleHappened: null,
        isMutable: true,
      },
    }
  );
  
  // üöÄ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é
  const tx = new Transaction().add(updateIx);
  await sendAndConfirmTransaction(connection, tx, [user]);
  
  console.log("‚úÖ –ú–µ—Ç–∞–¥–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ!");
  